# This is the config file for the catalyst-auto script. It should be pretty
# self-explanatory.

ARCH="x86"
TYPE="auto"
host=$(hostname)

source /etc/catalyst/release/build.env

SPECS_DIR=${REPO_DIR}/releases/weekly/specs/${ARCH}

SETS="
	i486
	i686
	hardened
"

SET_i486_SPECS="stage1.spec stage2.spec stage3.spec"
SET_i486_OPTIONAL_SPECS="installcd-stage1.spec installcd-stage2-minimal.spec"

SET_i686_SPECS="i686/stage1.spec i686/stage2.spec i686/stage3.spec"

SET_hardened_SPECS="hardened/stage1.spec hardened/stage2.spec hardened/stage3.spec"
SET_hardened_OPTIONAL_SPECS="hardened/admincd-stage1.spec hardened/admincd-stage2.spec"

KCONFIG_DIR=${REPO_DIR}/releases/weekly/kconfig/${ARCH}

EXTENSIONS="[.tar.xz,.tar.bz2,.tar.gz,.tar,.sfs]"

update_symlinks() {
	# Symlink the latest stages3 to build from
	for d in ${BUILD_SRCDIR_BASE}/{default,hardened} ; do
		pushd $d >/dev/null
		for f in $(ls stage3*${EXTENSIONS} | grep -v latest | give_latest_from_dates ) ; do
			# 20yymmddThhmmssZ
			# 20yymmddhhmmss
			# 20yymmdd
			# 20yy.n
			of=$(perl -p \
				-e 's/20\d{6}T\d{6}Z/latest/g;' \
				-e 's/20\d{6}\d{6}/latest/g;' \
				-e 's/20\d{6}/latest/g;' \
				-e 's/20\d{2}\.\d{2}/latest/g;' \
				<<<"$f")
			ln -svf "$f" "$of"
		done
		popd >/dev/null
	done
}

post_build() {
	cmd=(
		rsync
		-e 'ssh -i /root/.ssh/id_rsa'
		-a
		--omit-dir-times
		--delay-updates
	)
	case $HOSTNAME in
		nightheron)
			DEST_DEFAULT=${BUILD_DESTDIR_BASE}
			DEST_HARDENED=${BUILD_DESTDIR_BASE}/hardened
			;;
		*)
			DEST_DEFAULT=${ARCH}@releng-incoming.gentoo.org:${BUILD_DESTDIR_BASE}
			DEST_HARDENED=${ARCH}@releng-incoming.gentoo.org:${BUILD_DESTDIR_BASE}/hardened
			;;
	esac
	pushd ${BUILD_SRCDIR_BASE}/default >/dev/null
	mkdir -p ${TMPDIR}/empty
	"${cmd[@]}" ${TMPDIR}/empty ${DEST_DEFAULT}
	for file in $(ls stage{3,4}*${DATESTAMP}*${EXTENSIONS} stage{3,4}*${TIMESTAMP}*${EXTENSIONS} ); do
		if [ -f $file ]; then
			"${cmd[@]}" ${file}* ${DEST_DEFAULT}
		fi
	done
	if [ -f *${DATESTAMP}*.iso ]; then
		"${cmd[@]}" *${DATESTAMP}*.iso* ${DEST_DEFAULT}
	elif [ -f *${TIMESTAMP}*.iso ]; then
		"${cmd[@]}" *${TIMESTAMP}*.iso* ${DEST_DEFAULT}
	fi
	popd >/dev/null

	pushd ${BUILD_SRCDIR_BASE}/hardened >/dev/null
	"${cmd[@]}" ${TMPDIR}/empty ${DEST_HARDENED}
	for file in $(ls stage{3,4}*${DATESTAMP}*${EXTENSIONS} stage{3,4}*${TIMESTAMP}*${EXTENSIONS} ); do
		if [ -f $file ]; then
			"${cmd[@]}" $file* ${DEST_HARDENED}
		fi
	done
	if [ -f *${DATESTAMP}*.iso ]; then
		"${cmd[@]}" *${DATESTAMP}*.iso* ${DEST_HARDENED}
	elif [ -f *${TIMESTAMP}*.iso ]; then
		"${cmd[@]}" *${TIMESTAMP}*.iso* ${DEST_HARDENED}
	fi
	popd >/dev/null
}

# vim:ft=sh:
